"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[2172],{28476:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>t,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/using-gooseignore","title":"Prevent Goose from Accessing Files","description":".gooseignore is a text file that defines patterns for files and directories that Goose will not access. This means Goose cannot read, modify, delete, or run shell commands on these files when using the Developer extension\'s tools.","source":"@site/docs/guides/using-gooseignore.md","sourceDirName":"guides","slug":"/guides/using-gooseignore","permalink":"/goose/docs/guides/using-gooseignore","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"title":"Prevent Goose from Accessing Files","sidebar_label":"Using Gooseignore","sidebar_position":14},"sidebar":"tutorialSidebar","previous":{"title":"Run Tasks","permalink":"/goose/docs/guides/running-tasks"},"next":{"title":"Configuration File","permalink":"/goose/docs/guides/config-file"}}');var s=n(74848),r=n(28453);const l={title:"Prevent Goose from Accessing Files",sidebar_label:"Using Gooseignore",sidebar_position:14},t=void 0,c={},d=[{value:"Creating your <code>.gooseignore</code> file",id:"creating-your-gooseignore-file",level:2},{value:"Example <code>.gooseignore</code> file",id:"example-gooseignore-file",level:2},{value:"Ignore File Types and Priority",id:"ignore-file-types-and-priority",level:2},{value:"1. Global <code>.gooseignore</code>",id:"1-global-gooseignore",level:3},{value:"2. Local <code>.gooseignore</code>",id:"2-local-gooseignore",level:3},{value:"3. <code>.gitignore</code> Fallback",id:"3-gitignore-fallback",level:3},{value:"4. Default Patterns",id:"4-default-patterns",level:3},{value:"Common use cases",id:"common-use-cases",level:2}];function a(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:".gooseignore"})," is a text file that defines patterns for files and directories that Goose will not access. This means Goose cannot read, modify, delete, or run shell commands on these files when using the Developer extension's tools."]}),"\n",(0,s.jsx)(o.admonition,{title:"Developer extension only",type:"info",children:(0,s.jsxs)(o.p,{children:["The .gooseignore feature currently only affects tools in the ",(0,s.jsx)(o.a,{href:"/docs/mcp/developer-mcp",children:"Developer"})," extension. Other extensions are not restricted by these rules."]})}),"\n",(0,s.jsxs)(o.p,{children:["This guide will show you how to use ",(0,s.jsx)(o.code,{children:".gooseignore"})," files to prevent Goose from changing specific files and directories."]}),"\n",(0,s.jsxs)(o.h2,{id:"creating-your-gooseignore-file",children:["Creating your ",(0,s.jsx)(o.code,{children:".gooseignore"})," file"]}),"\n",(0,s.jsxs)(o.p,{children:["Goose supports two types of ",(0,s.jsx)(o.code,{children:".gooseignore"})," files:"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Global ignore file"})," - Create a ",(0,s.jsx)(o.code,{children:".gooseignore"})," file in ",(0,s.jsx)(o.code,{children:"~/.config/goose"}),". These restrictions will apply to all your sessions with Goose, regardless of directory."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Local ignore file"})," - Create a ",(0,s.jsx)(o.code,{children:".gooseignore"})," file at the root of the directory you'd like it applied to. These restrictions will only apply when working in a specific directory."]}),"\n"]}),"\n",(0,s.jsx)(o.admonition,{type:"tip",children:(0,s.jsxs)(o.p,{children:["You can use both global and local ",(0,s.jsx)(o.code,{children:".gooseignore"})," files simultaneously. When both exist, Goose will combine the restrictions from both files to determine which paths are restricted."]})}),"\n",(0,s.jsxs)(o.h2,{id:"example-gooseignore-file",children:["Example ",(0,s.jsx)(o.code,{children:".gooseignore"})," file"]}),"\n",(0,s.jsxs)(o.p,{children:["In your ",(0,s.jsx)(o.code,{children:".gooseignore"})," file, you can write patterns to match files you want Goose to ignore. Here are some common patterns:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-plaintext",children:'# Ignore specific files by name\nsettings.json         # Ignore only the file named "settings.json"\n\n# Ignore files by extension\n*.pdf                # Ignore all PDF files\n*.config             # Ignore all files ending in .config\n\n# Ignore directories and their contents\nbackup/              # Ignore everything in the "backup" directory\ndownloads/           # Ignore everything in the "downloads" directory\n\n# Ignore all files with this name in any directory\n**/credentials.json  # Ignore all files named "credentials.json" in any directory\n\n# Complex patterns\n*.log                # Ignore all .log files\n!error.log           # Except for error.log file\n'})}),"\n",(0,s.jsx)(o.h2,{id:"ignore-file-types-and-priority",children:"Ignore File Types and Priority"}),"\n",(0,s.jsxs)(o.p,{children:["Goose respects ignore rules from three sources: global ",(0,s.jsx)(o.code,{children:".gooseignore"}),", local ",(0,s.jsx)(o.code,{children:".gooseignore"}),", and ",(0,s.jsx)(o.code,{children:".gitignore"}),". It uses a priority system to determine which files should be ignored."]}),"\n",(0,s.jsxs)(o.h3,{id:"1-global-gooseignore",children:["1. Global ",(0,s.jsx)(o.code,{children:".gooseignore"})]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Highest priority and always applied first"}),"\n",(0,s.jsxs)(o.li,{children:["Located at ",(0,s.jsx)(o.code,{children:"~/.config/goose/.gooseignore"})]}),"\n",(0,s.jsx)(o.li,{children:"Affects all projects on your machine"}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"~/.config/goose/\n\u2514\u2500\u2500 .gooseignore      \u2190 Applied to all projects\n"})}),"\n",(0,s.jsxs)(o.h3,{id:"2-local-gooseignore",children:["2. Local ",(0,s.jsx)(o.code,{children:".gooseignore"})]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"Project-specific rules"}),"\n",(0,s.jsx)(o.li,{children:"Located in your project root directory"}),"\n",(0,s.jsxs)(o.li,{children:["Overrides ",(0,s.jsx)(o.code,{children:".gitignore"})," completely"]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"~/.config/goose/\n\u2514\u2500\u2500 .gooseignore      \u2190 Global rules applied first\n\nProject/\n\u251c\u2500\u2500 .gooseignore      \u2190 Local rules applied second\n\u251c\u2500\u2500 .gitignore        \u2190 Ignored when .gooseignore exists\n\u2514\u2500\u2500 src/\n"})}),"\n",(0,s.jsxs)(o.h3,{id:"3-gitignore-fallback",children:["3. ",(0,s.jsx)(o.code,{children:".gitignore"})," Fallback"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Used when no local ",(0,s.jsx)(o.code,{children:".gooseignore"})," exists"]}),"\n",(0,s.jsxs)(o.li,{children:["Goose automatically uses your ",(0,s.jsx)(o.code,{children:".gitignore"})," rules"]}),"\n",(0,s.jsxs)(o.li,{children:["If a global ",(0,s.jsx)(o.code,{children:".gooseignore"})," file exists, those rules will be applied in addition to the ",(0,s.jsx)(o.code,{children:".gitignore"})," patterns."]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"Project/\n\u251c\u2500\u2500 .gitignore        \u2190 Used by Goose (when no local .gooseignore)\n\u2514\u2500\u2500 src/\n"})}),"\n",(0,s.jsx)(o.h3,{id:"4-default-patterns",children:"4. Default Patterns"}),"\n",(0,s.jsx)(o.p,{children:"By default, if you haven't created any .gooseignore files and no .gitignore file exists, Goose will not modify files matching these patterns:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-plaintext",children:"**/.env\n**/.env.*\n**/secrets.*\n"})}),"\n",(0,s.jsx)(o.h2,{id:"common-use-cases",children:"Common use cases"}),"\n",(0,s.jsxs)(o.p,{children:["Here are some typical scenarios where ",(0,s.jsx)(o.code,{children:".gooseignore"})," is helpful:"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Generated Files"}),": Prevent Goose from modifying auto-generated code or build outputs"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Third-Party Code"}),": Keep Goose from changing external libraries or dependencies"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Important Configurations"}),": Protect critical configuration files from accidental modifications"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Version Control"}),": Prevent changes to version control files like ",(0,s.jsx)(o.code,{children:".git"})," directory"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Existing Projects"}),": Most projects already have ",(0,s.jsx)(o.code,{children:".gitignore"})," files that work automatically as ignore patterns for Goose"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Custom Restrictions"}),": Create ",(0,s.jsx)(o.code,{children:".gooseignore"})," when you need different patterns than your ",(0,s.jsx)(o.code,{children:".gitignore"})," (e.g., allowing Goose to read files that Git ignores)"]}),"\n"]})]})}function g(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>t});var i=n(96540);const s={},r=i.createContext(s);function l(e){const o=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:o},e.children)}}}]);