"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[4229],{47528:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"tutorials/lead-worker","title":"Lead/Worker Multi-Model Setup","description":"Enable multi-model functionality by pairing LLMs to complete your tasks","source":"@site/docs/tutorials/lead-worker.md","sourceDirName":"tutorials","slug":"/tutorials/lead-worker","permalink":"/goose/docs/tutorials/lead-worker","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"description":"Enable multi-model functionality by pairing LLMs to complete your tasks"},"sidebar":"tutorialSidebar","previous":{"title":"Observability with Langfuse","permalink":"/goose/docs/tutorials/langfuse"},"next":{"title":"MongoDB Extension","permalink":"/goose/docs/tutorials/mongodb-mcp"}}');var o=n(74848),s=n(28453),a=n(65537),i=n(79329);const l={description:"Enable multi-model functionality by pairing LLMs to complete your tasks"},d="Lead/Worker Multi-Model Setup",c={},u=[{value:"Turn-Based System",id:"turn-based-system",level:2},{value:"Quick Example",id:"quick-example",level:2},{value:"Configuration",id:"configuration",level:2},{value:"What Counts as a Failure?",id:"what-counts-as-a-failure",level:2},{value:"Reasons to Use Lead/Worker",id:"reasons-to-use-leadworker",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Planning Mode Compatibility",id:"planning-mode-compatibility",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"leadworker-multi-model-setup",children:"Lead/Worker Multi-Model Setup"})}),"\n",(0,o.jsx)(t.p,{children:"Goose supports a lead/worker model configuration that lets you pair two different AI models - one that's great at thinking and another that's fast at doing. This setup tackles a major pain point: premium models are powerful but expensive, while cheaper models are faster but can struggle with complex tasks. With lead/worker mode, you get the best of both worlds."}),"\n",(0,o.jsx)(t.p,{children:'The lead/worker model is a smart hand-off system. The "lead" model (think: GPT-4 or Claude Opus) kicks things off, handling the early planning and big picture reasoning. Once the direction is set, Goose hands the task over to the "worker" model (like GPT-4o-mini or Claude Sonnet) to carry out the steps.'}),"\n",(0,o.jsx)(t.p,{children:"If things go sideways (e.g. the worker model gets confused or keeps making mistakes), Goose notices and automatically pulls the lead model back in to recover. Once things are back on track, the worker takes over again."}),"\n",(0,o.jsx)(t.h2,{id:"turn-based-system",children:"Turn-Based System"}),"\n",(0,o.jsxs)(t.p,{children:["A ",(0,o.jsx)(t.strong,{children:"turn"})," is one full interaction - your prompt and the model's response. Goose switches models based on turns:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Initial turns"})," (default: 3) go to the lead model"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Subsequent turns"})," use the worker model"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Fallback kicks in"})," if the worker model fails too many times in a row"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Recovery"})," returns the session to the worker model once things stabilize"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"quick-example",children:"Quick Example"}),"\n",(0,o.jsx)(t.p,{children:"You might configure Goose like this:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'export GOOSE_LEAD_MODEL="gpt-4o"          # strong reasoning\nexport GOOSE_MODEL="gpt-4o-mini"          # fast execution\nexport GOOSE_PROVIDER="openai"\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Goose will start with ",(0,o.jsx)(t.code,{children:"gpt-4o"})," for the first three turns, then hand off to ",(0,o.jsx)(t.code,{children:"gpt-4o-mini"}),". If the worker gets tripped up twice in a row, Goose temporarily switches back to the lead model for two fallback turns before trying the worker again."]}),"\n",(0,o.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Ensure you have ",(0,o.jsx)(t.a,{href:"/docs/getting-started/providers",children:"added the LLMs to Goose"})]})}),"\n",(0,o.jsxs)(a.A,{groupId:"interface",children:[(0,o.jsx)(i.A,{value:"ui",label:"Goose Desktop",default:!0,children:(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Click the model name at the bottom of the Goose Desktop window"}),"\n",(0,o.jsxs)(t.li,{children:["Click ",(0,o.jsx)(t.strong,{children:"Lead/Worker Settings"})]}),"\n",(0,o.jsxs)(t.li,{children:["Check the box to ",(0,o.jsx)(t.strong,{children:"Enable lead/worker mode"})]}),"\n",(0,o.jsxs)(t.li,{children:["Select your ",(0,o.jsx)(t.strong,{children:"Lead Model"})," and ",(0,o.jsx)(t.strong,{children:"Worker Model"})," from the dropdown menus"]}),"\n",(0,o.jsxs)(t.li,{children:["(Optional) Change the default number of ",(0,o.jsx)(t.strong,{children:"initial lead turns"}),", the ",(0,o.jsx)(t.strong,{children:"failure threshold"})," before switching back to the leavd model, or the number of ",(0,o.jsx)(t.strong,{children:"fallback turns"})," to use the lead model during fallback"]}),"\n"]})}),(0,o.jsxs)(i.A,{value:"cli",label:"Goose CLI",children:[(0,o.jsxs)(t.p,{children:["The only required configuration is setting the ",(0,o.jsx)(t.code,{children:"GOOSE_LEAD_MODEL"})," ",(0,o.jsx)(t.a,{href:"/docs/guides/environment-variables#leadworker-model-configuration",children:"environment variable"}),":"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'export GOOSE_LEAD_MODEL="gpt-4o"\n'})}),(0,o.jsxs)(t.p,{children:["That's it. Goose treats your regular ",(0,o.jsx)(t.code,{children:"GOOSE_MODEL"})," as the worker model by default."]}),(0,o.jsx)(t.p,{children:"For more control, you can also set these optional environment variables:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'export GOOSE_LEAD_PROVIDER="anthropic"         # If different from the main provider\nexport GOOSE_LEAD_TURNS=5                      # Use lead model for first 5 turns\nexport GOOSE_LEAD_FAILURE_THRESHOLD=3          # Switch back to lead after 3 failures\nexport GOOSE_LEAD_FALLBACK_TURNS=2             # Use lead model for 2 turns before retrying worker\n'})}),(0,o.jsx)(t.p,{children:"After making these configurations, the lead/worker models will be used in new CLI and Desktop sessions."})]})]}),"\n",(0,o.jsx)(t.h2,{id:"what-counts-as-a-failure",children:"What Counts as a Failure?"}),"\n",(0,o.jsx)(t.p,{children:"Goose is smart about detecting actual task failures, not just API errors. The fallback kicks in when the worker:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Generates broken code (syntax errors, tool failures, missing files)"}),"\n",(0,o.jsx)(t.li,{children:"Hits permission issues"}),"\n",(0,o.jsx)(t.li,{children:'Gets corrected by the user ("that\'s wrong", "try again", etc.)'}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Technical hiccups like timeouts, authentication issues, or service downtime don't trigger fallback mode. Goose retries those quietly."}),"\n",(0,o.jsx)(t.h2,{id:"reasons-to-use-leadworker",children:"Reasons to Use Lead/Worker"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Lower your costs"})," by using cheaper models for routine execution"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Speed things up"})," while still getting solid plans from more capable models"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Mix and match providers"})," (e.g., Claude for reasoning, OpenAI for execution)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Handle long dev sessions"})," without worrying about model fatigue or performance"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(t.p,{children:"If you're just getting started, the default settings will work fine. But here's how to tune things:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Bump up ",(0,o.jsx)(t.code,{children:"GOOSE_LEAD_TURNS"})," to 5\u20137 for heavier planning upfront"]}),"\n",(0,o.jsxs)(t.li,{children:["Lower ",(0,o.jsx)(t.code,{children:"GOOSE_LEAD_FAILURE_THRESHOLD"})," to 1 if you want Goose to correct issues quickly"]}),"\n",(0,o.jsx)(t.li,{children:"Choose a fast, lightweight worker model (Claude Haiku, GPT-4o-mini) for day-to-day tasks"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"For debugging, you can see model switching behavior by turning on this log:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"export RUST_LOG=goose::providers::lead_worker=info\n"})}),"\n",(0,o.jsx)(t.h2,{id:"planning-mode-compatibility",children:"Planning Mode Compatibility"}),"\n",(0,o.jsxs)(t.p,{children:["The lead/worker model is an automatic alternative to the ",(0,o.jsxs)(t.a,{href:"/goose/docs/guides/creating-plans",children:["Goose CLI's ",(0,o.jsx)(t.code,{children:"/plan"})," command"]}),". You can assign separate models to use as the lead/worker and planning models. For example:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'export GOOSE_PROVIDER="openai"\nexport GOOSE_MODEL="gpt-4o-mini"        # the main conversational model\n\nexport GOOSE_LEAD_MODEL="o1-preview"    # the lead model used automatically\nexport GOOSE_PLANNER_MODEL="gpt-4o"     # the model used when you explicitly call /plan\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Use ",(0,o.jsx)(t.strong,{children:"planning mode"})," when you want a dedicated reasoning model to generate comprehensive strategies that you can review and approve before execution. Use the ",(0,o.jsx)(t.strong,{children:"lead/worker model"})," for iterative development work where you want smart automation without interruption - like implementing features, debugging issues, or exploratory coding. Your workflow can combine both: use ",(0,o.jsx)(t.code,{children:"/plan"})," to strategize major decisions, then let the lead/worker models handle the tactical implementation with automatic optimization."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},79329:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var r=n(34164);const o={tabItem:"tabItem_Ymn6"};var s=n(74848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,a),hidden:n,children:t})}},65537:(e,t,n)=>{n.d(t,{A:()=>v});var r=n(96540),o=n(34164),s=n(65627),a=n(56347),i=n(50372),l=n(30604),d=n(11861),c=n(78749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:o}}=e;return{value:t,label:n,attributes:r,default:o}}))}(n);return function(e){const t=(0,d.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,a.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(o.location.search);t.set(s,e),o.replace({...o.location,search:t.toString()})}),[s,o])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,s=h(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[d,u]=m({queryString:n,groupId:o}),[g,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,s]=(0,c.Dv)(n);return[o,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:o}),x=(()=>{const e=d??g;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{x&&l(x)}),[x]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=n(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function j(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const t=e.currentTarget,n=l.indexOf(t),o=i[n].value;o!==r&&(d(t),a(o))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>{l.push(e)},onKeyDown:u,onClick:c,...s,className:(0,o.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function k(e){let{lazy:t,children:n,selectedValue:s}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function w(e){const t=g(e);return(0,b.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(k,{...t,...e})]})}function v(e){const t=(0,f.A)();return(0,b.jsx)(w,{...e,children:u(e.children)},String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);