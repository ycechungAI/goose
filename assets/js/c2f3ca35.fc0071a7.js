"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[9741],{16422:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var s=n(3744),o=n(74848),i=n(28453);const a={title:"3 Prompts to Test for Agent Readiness",description:"A series of prompts to test an LLM's capabilities to be used with AI agents",authors:["angie"]},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Tool Calling",id:"tool-calling",level:2},{value:"Memory Awareness",id:"memory-awareness",level:2},{value:"File system reasoning",id:"file-system-reasoning",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"blog cover",src:n(71078).A+"",width:"1200",height:"630"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/",children:"Goose"})," is LLM-agnostic, meaning you can plug in the model of your choice. However, not every LLM is suitable to work with agents. Some may be great at ",(0,o.jsx)(t.em,{children:"answering"})," things, but not actually ",(0,o.jsx)(t.em,{children:"doing"})," things. If you're considering which model to use with an agent, these 3 prompts can quickly give you a sense of the model's capabilities."]}),"\n",(0,o.jsx)(t.h2,{id:"tool-calling",children:"Tool Calling"}),"\n",(0,o.jsx)(t.p,{children:"This initial prompt tests for tool calling capabilities. Its ask is forceful to reduce a shy model's hesitation to make function calls."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'Create a file at ~/workspace/loose-goose/tool-test.txt with the contents "Hello World".\n\nUse the write tool. Do not ask for confirmation. Just do it.\n'})}),"\n",(0,o.jsx)(t.p,{children:"\u2705 tool-test.txt was created"}),"\n",(0,o.jsx)(t.p,{children:"\u274c the agent responds by telling you the code to write yourself"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Example of successful response"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'\u2500\u2500\u2500 text_editor | developer \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\npath: ~/workspace/loose-goose/tool-test.txt\ncommand: write\nfile_text: Hello World\n\nThe file has been created successfully with the following content:\n\n"Hello World"\n'})}),"\n",(0,o.jsx)(t.p,{children:"The model emits a structured tool call in JSON."}),"\n",(0,o.jsx)(t.h2,{id:"memory-awareness",children:"Memory Awareness"}),"\n",(0,o.jsx)(t.p,{children:"Next, test whether the agent can recall what it\u2019s doing. It's critical that the model can remember previous actions and continues logically."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'Now append a new line that says: "I know what I\'m doing"\n'})}),"\n",(0,o.jsx)(t.p,{children:"\u2705 tool-test.txt was updated"}),"\n",(0,o.jsx)(t.p,{children:"\u274c the agent responds by asking you which file"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Example of successful response"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"\u2500\u2500\u2500 text_editor | developer \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\npath: ~/workspace/loose-goose/tool-test.txt\ncommand: write\nfile_text: Hello World\nI know what I'm doing\n"})}),"\n",(0,o.jsx)(t.p,{children:"The agent appends the new line directly to the same file, without needing a reminder of the path."}),"\n",(0,o.jsx)(t.h2,{id:"file-system-reasoning",children:"File system reasoning"}),"\n",(0,o.jsx)(t.p,{children:"The last prompt tests whether the model can infer file locations by resolving relative and absolute paths based on context. You don't want the agent deleting important directories because the model is hallucinating about where it is."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"What is the current content of tool-test.txt?\n"})}),"\n",(0,o.jsx)(t.p,{children:"\u2705 content of tool-test.txt"}),"\n",(0,o.jsx)(t.p,{children:"\u274c confusion about where to find the file"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Example of successful response"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"\u2500\u2500\u2500 text_editor | developer \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\npath: ~/workspace/loose-goose/tool-test.txt\ncommand: read\n\nHello World\nI know what I'm doing\n"})}),"\n",(0,o.jsx)(t.p,{children:"The model correctly infers the path from previous context and uses the read tool to get the current contents."}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:"If a model passes this multi-turn prompt sequence, it's safe to assume that it is suitable for agentic AI."}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("meta",{property:"og:title",content:"3 Prompts to Test for Agent Readiness"}),(0,o.jsx)("meta",{property:"og:type",content:"article"}),(0,o.jsx)("meta",{property:"og:url",content:"https://block.github.io/goose/blog/2025/05/22/llm-agent-readiness"}),(0,o.jsx)("meta",{property:"og:description",content:"A series of prompts to test an LLM's capabilities to be used with AI agents"}),(0,o.jsx)("meta",{property:"og:image",content:"https://block.github.io/goose/assets/images/llm-agent-test-86ce2379ce4dde48ae1448f0f9d75c1f.png"}),(0,o.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,o.jsx)("meta",{property:"twitter:domain",content:"block.github.io/goose"}),(0,o.jsx)("meta",{name:"twitter:title",content:"3 Prompts to Test for Agent Readiness"}),(0,o.jsx)("meta",{name:"twitter:description",content:"A series of prompts to test an LLM's capabilities to be used with AI agents"}),(0,o.jsx)("meta",{name:"twitter:image",content:"https://block.github.io/goose/assets/images/llm-agent-test-86ce2379ce4dde48ae1448f0f9d75c1f.png"})]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},71078:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/llm-agent-test-86ce2379ce4dde48ae1448f0f9d75c1f.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(96540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},3744:e=>{e.exports=JSON.parse('{"permalink":"/goose/blog/2025/05/22/llm-agent-readiness","source":"@site/blog/2025-05-22-llm-agent-readiness/index.md","title":"3 Prompts to Test for Agent Readiness","description":"A series of prompts to test an LLM\'s capabilities to be used with AI agents","date":"2025-05-22T00:00:00.000Z","tags":[],"readingTime":2.325,"hasTruncateMarker":true,"authors":[{"name":"Angie Jones","title":"Head of Developer Relations","url":"https://angiejones.tech","page":{"permalink":"/goose/blog/authors/angie"},"socials":{"linkedin":"https://www.linkedin.com/in/angiejones/","github":"https://github.com/angiejones","x":"https://x.com/techgirl1908","bluesky":"https://bsky.app/profile/angiejones.tech"},"imageURL":"https://avatars.githubusercontent.com/u/15972783?v=4","key":"angie"}],"frontMatter":{"title":"3 Prompts to Test for Agent Readiness","description":"A series of prompts to test an LLM\'s capabilities to be used with AI agents","authors":["angie"]},"unlisted":false,"prevItem":{"title":"Democratizing Detection Engineering at Block: Taking Flight with Goose and Panther MCP","permalink":"/goose/blog/2025/06/02/goose-panther-mcp"},"nextItem":{"title":"How I Manage Localhost Port Conflicts With an AI Agent","permalink":"/goose/blog/2025/05/22/manage-local-host-conflicts-with-goose"}}')}}]);